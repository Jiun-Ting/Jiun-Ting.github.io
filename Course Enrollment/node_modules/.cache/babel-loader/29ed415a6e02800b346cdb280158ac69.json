{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\thepa\\\\Jiun-Ting.github.io\\\\Course Enrollment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"C:\\\\Users\\\\thepa\\\\Jiun-Ting.github.io\\\\Course Enrollment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\thepa\\\\Jiun-Ting.github.io\\\\Course Enrollment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";var SearchAndFilter=/*#__PURE__*/function(){function SearchAndFilter(){_classCallCheck(this,SearchAndFilter);}_createClass(SearchAndFilter,[{key:\"searchAndFilter\",value:function searchAndFilter(courses,search,subject,interest,minimumCredits,maximumCredits){if(subject!==''&&search!==null){var coursesAfterSearch=[];var _iterator=_createForOfIteratorHelper(courses),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var course=_step.value;var _iterator2=_createForOfIteratorHelper(course.keywords),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var keyword=_step2.value;if(keyword.includes(search)){coursesAfterSearch.push(course);break;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}courses=coursesAfterSearch;}if(subject!=='All'){var coursesAfterSubject=[];var _iterator3=_createForOfIteratorHelper(courses),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _course=_step3.value;if(_course.subject===subject)coursesAfterSubject.push(_course);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}courses=coursesAfterSubject;}if(interest!=='All'){var coursesAfterInterest=[];var _iterator4=_createForOfIteratorHelper(courses),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _course2=_step4.value;if(_course2.subject===interest)coursesAfterInterest.push(_course2);for(var i=0;i<=_course2.keywords.length;i++){if(_course2.keywords[i]===interest){coursesAfterInterest.push(_course2);}}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}courses=coursesAfterInterest;}if(minimumCredits!==''){var coursesAfterMinimumCredits=[];var _iterator5=_createForOfIteratorHelper(courses),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _course3=_step5.value;if(_course3.credits>=parseInt(minimumCredits))coursesAfterMinimumCredits.push(_course3);}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}courses=coursesAfterMinimumCredits;}if(maximumCredits!==''){var coursesAfterMaximumCredits=[];var _iterator6=_createForOfIteratorHelper(courses),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var _course4=_step6.value;if(_course4.credits<=parseInt(maximumCredits))coursesAfterMaximumCredits.push(_course4);}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}courses=coursesAfterMaximumCredits;}return courses;}}]);return SearchAndFilter;}();export default SearchAndFilter;","map":{"version":3,"sources":["C:/Users/thepa/Jiun-Ting.github.io/Course Enrollment/src/SearchAndFilter.js"],"names":["SearchAndFilter","courses","search","subject","interest","minimumCredits","maximumCredits","coursesAfterSearch","course","keywords","keyword","includes","push","coursesAfterSubject","coursesAfterInterest","i","length","coursesAfterMinimumCredits","credits","parseInt","coursesAfterMaximumCredits"],"mappings":"qjBAAMA,CAAAA,e,+KACYC,O,CAASC,M,CAAQC,O,CAASC,Q,CAASC,c,CAAgBC,c,CAAgB,CAGjF,GAAGH,OAAO,GAAK,EAAZ,EAAkBD,MAAM,GAAK,IAAhC,CAAsC,CACpC,GAAIK,CAAAA,kBAAkB,CAAG,EAAzB,CADoC,yCAGhBN,OAHgB,YAGpC,+CAA6B,IAAnBO,CAAAA,MAAmB,uDACNA,MAAM,CAACC,QADD,aAC3B,kDACA,IADUC,CAAAA,OACV,cACE,GAAGA,OAAO,CAACC,QAAR,CAAiBT,MAAjB,CAAH,CAA4B,CAC5BK,kBAAkB,CAACK,IAAnB,CAAwBJ,MAAxB,EACA,MACC,CACF,CAP0B,uDAQ5B,CAXmC,qDAYpCP,OAAO,CAAGM,kBAAV,CACD,CAGD,GAAGJ,OAAO,GAAK,KAAf,CAAsB,CACpB,GAAIU,CAAAA,mBAAmB,CAAG,EAA1B,CADoB,0CAGAZ,OAHA,aAGpB,kDAA6B,IAAnBO,CAAAA,OAAmB,cAC3B,GAAGA,OAAM,CAACL,OAAP,GAAmBA,OAAtB,CACEU,mBAAmB,CAACD,IAApB,CAAyBJ,OAAzB,EACH,CANmB,uDAOpBP,OAAO,CAAGY,mBAAV,CACD,CAED,GAAGT,QAAQ,GAAK,KAAhB,CAAuB,CACrB,GAAIU,CAAAA,oBAAoB,CAAG,EAA3B,CADqB,0CAEDb,OAFC,aAErB,kDAA6B,IAAnBO,CAAAA,QAAmB,cAC3B,GAAGA,QAAM,CAACL,OAAP,GAAmBC,QAAtB,CACEU,oBAAoB,CAACF,IAArB,CAA0BJ,QAA1B,EACF,IAAK,GAAIO,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,EAAEP,QAAM,CAACC,QAAP,CAAgBO,MAAjC,CAA0CD,CAAC,EAA3C,CAA8C,CAC5C,GAAIP,QAAM,CAACC,QAAP,CAAgBM,CAAhB,IAAuBX,QAA3B,CAAoC,CAClCU,oBAAoB,CAACF,IAArB,CAA0BJ,QAA1B,EACD,CACF,CACF,CAVoB,uDAWrBP,OAAO,CAAGa,oBAAV,CACD,CACD,GAAGT,cAAc,GAAK,EAAtB,CAA0B,CACxB,GAAIY,CAAAA,0BAA0B,CAAG,EAAjC,CADwB,0CAGJhB,OAHI,aAGxB,kDAA6B,IAAnBO,CAAAA,QAAmB,cAC3B,GAAGA,QAAM,CAACU,OAAP,EAAkBC,QAAQ,CAACd,cAAD,CAA7B,CACEY,0BAA0B,CAACL,IAA3B,CAAgCJ,QAAhC,EACH,CANuB,uDAOxBP,OAAO,CAAGgB,0BAAV,CACD,CAED,GAAGX,cAAc,GAAK,EAAtB,CAA0B,CACxB,GAAIc,CAAAA,0BAA0B,CAAG,EAAjC,CADwB,0CAGJnB,OAHI,aAGxB,kDAA6B,IAAnBO,CAAAA,QAAmB,cAC3B,GAAGA,QAAM,CAACU,OAAP,EAAkBC,QAAQ,CAACb,cAAD,CAA7B,CACEc,0BAA0B,CAACR,IAA3B,CAAgCJ,QAAhC,EACH,CANuB,uDAOxBP,OAAO,CAAGmB,0BAAV,CACD,CAED,MAAOnB,CAAAA,OAAP,CACD,C,+BAGH,cAAeD,CAAAA,eAAf","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, search, subject, interest,minimumCredits, maximumCredits) {\r\n\r\n  \r\n    if(subject !== '' && search !== null) {\r\n      let coursesAfterSearch = [];\r\n\r\n      for(const course of courses) {\r\n        for(const keyword of course.keywords)\r\n        {\r\n          if(keyword.includes(search)){\r\n          coursesAfterSearch.push(course);\r\n          break;\r\n          }\r\n        } \r\n      }\r\n      courses = coursesAfterSearch;\r\n    }\r\n\r\n\r\n    if(subject !== 'All') {\r\n      let coursesAfterSubject = [];\r\n\r\n      for(const course of courses) { \r\n        if(course.subject === subject)\r\n          coursesAfterSubject.push(course);\r\n      }\r\n      courses = coursesAfterSubject;\r\n    }\r\n\r\n    if(interest !== 'All') {\r\n      let coursesAfterInterest = [] \r\n      for(const course of courses) { \r\n        if(course.subject === interest)\r\n          coursesAfterInterest.push(course);\r\n        for (let i=0; i<=course.keywords.length ; i++){\r\n          if (course.keywords[i] === interest){\r\n            coursesAfterInterest.push(course);\r\n          }\r\n        }\r\n      }\r\n      courses = coursesAfterInterest;\r\n    }\r\n    if(minimumCredits !== '') {\r\n      let coursesAfterMinimumCredits = [];\r\n\r\n      for(const course of courses) { \r\n        if(course.credits >= parseInt(minimumCredits))\r\n          coursesAfterMinimumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMinimumCredits;\r\n    }\r\n\r\n    if(maximumCredits !== '') {\r\n      let coursesAfterMaximumCredits = [];\r\n\r\n      for(const course of courses) { \r\n        if(course.credits <= parseInt(maximumCredits))\r\n          coursesAfterMaximumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMaximumCredits;\r\n    }\r\n\r\n    return courses;\r\n  }\r\n}\r\n\r\nexport default SearchAndFilter;\r\n"]},"metadata":{},"sourceType":"module"}