{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thepa\\\\Jiun-Ting.github.io\\\\Course Enrollment\\\\src\\\\Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Accordion from 'react-bootstrap/Accordion';\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getPriority = (data, output) => {\n      let dict = data.requisites;\n\n      if (dict.length === 0) {\n        return output;\n      }\n\n      let Requisites = [];\n\n      for (let must in dict) {\n        let group = [];\n\n        for (let option in dict[must]) {\n          let temp = this.props.complete.find(x => {\n            return x === dict[must][option];\n          });\n          console.log(this.props.complete);\n\n          if (!temp) {\n            group.push(dict[must][option]);\n          }\n\n          let course = this.props.allCourses.find(x => {\n            return x.number === dict[must][option];\n          });\n\n          if (!this.getRequisites(course)) {\n            output.push(this.getPriority(course, output)[0]);\n          }\n\n          group.push(\" OR \");\n        }\n\n        group.pop();\n        Requisites.push(group.join().replaceAll(\",\", ''));\n      }\n\n      output.push(\"Take: \" + Requisites + \" to satisfiy: \" + data.number + \"\\n\");\n      return output;\n    };\n\n    this.state = {\n      expanded: false,\n      showModal: false,\n      show: false,\n      cart: false,\n      qualified: true\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  getRequisites(data) {\n    let dict = data.requisites;\n    let completed = this.props.complete;\n\n    for (let must in dict) {\n      let subReq = false;\n\n      for (let option in dict[must]) {\n        for (let i = 0; i < completed.length; i++) {\n          if (dict[must][option] === completed[i]) {\n            subReq = true;\n          }\n        }\n      }\n\n      if (subReq === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getQualified() {\n    if (!this.getRequisites(this.props.data) && this.state.cart === true) {\n      return false;\n    }\n\n    return true;\n  }\n\n  removeDups(names) {\n    let unique = {};\n    names.forEach(function (i) {\n      if (!unique[i]) {\n        unique[i] = true;\n      }\n    });\n    return Object.keys(unique);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '33%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, this.props.data.name), this.getExpansionButton()), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, this.props.data.number, \" - \", this.getCredits()), this.getDescription(), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"View sections\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: () => this.closeModal(),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, this.props.data.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, this.getSections()), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, this.getQualified() ? ' ' : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Not Qualified\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }\n    }, \"You can take courses by the follwing steps:\", this.removeDups(this.getPriority(this.props.data, []))))))), this.getCourseButton(), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.closeModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Close\"))));\n  }\n\n  getCourseButton() {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = () => this.addCourse();\n\n    let buttonText = 'Add Course';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      buttonVariant = 'outline-dark';\n\n      buttonOnClick = () => this.removeCourse();\n\n      buttonText = 'Remove Course';\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, buttonText);\n  }\n\n  getSections() {\n    let sections = [];\n\n    for (let i = 0; i < this.props.data.sections.length; i++) {\n      sections.push( /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, \"Section \" + i, this.getSectionButton(i)), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, JSON.stringify(this.props.data.sections[i].time), this.getSubsections(i, this.props.data.sections[i])))));\n    }\n\n    return /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, sections);\n  }\n\n  getSectionButton(section) {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = e => this.addSection(e, section);\n\n    let buttonText = 'Add Section';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        buttonVariant = 'outline-dark';\n\n        buttonOnClick = e => this.removeSection(e, section);\n\n        buttonText = 'Remove Section';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 12\n      }\n    }, buttonText);\n  }\n\n  addCourse() {\n    this.props.addCartCourse({\n      course: this.props.courseKey\n    });\n    this.setState({\n      cart: true\n    });\n  }\n\n  removeCourse() {\n    this.props.removeCartCourse({\n      course: this.props.courseKey\n    });\n    this.setState({\n      cart: false\n    });\n  }\n\n  addSection(e, section) {\n    e.stopPropagation();\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n    this.setState({\n      cart: true\n    });\n  }\n\n  removeSection(e, section) {\n    e.stopPropagation();\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n    this.setState({\n      cart: false\n    });\n  }\n\n  addSubsection(e, section, subsection) {\n    e.stopPropagation();\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n    this.setState({\n      cart: true\n    });\n  }\n\n  removeSubsection(e, section, subsection) {\n    e.stopPropagation();\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n    this.setState({\n      cart: false\n    });\n  }\n\n  getSubsections(sectionKey, sectionValue) {\n    let subsections = [];\n\n    for (let i = 0; i < sectionValue.subsections.length; i++) {\n      subsections.push( /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }\n      }, i, this.getSubsectionButton(sectionKey, i)), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }, JSON.stringify(sectionValue.subsections[i].time)))));\n    }\n\n    return /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }\n    }, subsections);\n  }\n\n  getSubsectionButton(section, subsection) {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = e => this.addSubsection(e, section, subsection);\n\n    let buttonText = 'Add Subsection';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        if (this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\n          buttonVariant = 'outline-dark';\n\n          buttonOnClick = e => this.removeSubsection(e, section, subsection);\n\n          buttonText = 'Remove Subsection';\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 12\n      }\n    }, buttonText);\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  setExpanded(value) {\n    this.setState({\n      expanded: value\n    });\n  }\n\n  getExpansionButton() {\n    let buttonText = '▼';\n\n    let buttonOnClick = () => this.setExpanded(true);\n\n    if (this.state.expanded) {\n      buttonText = '▲';\n\n      buttonOnClick = () => this.setExpanded(false);\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      style: {\n        width: 25,\n        height: 25,\n        fontSize: 12,\n        padding: 0,\n        position: 'absolute',\n        right: 20,\n        top: 20\n      },\n      onClick: buttonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }\n    }, buttonText);\n  }\n\n  getDescription() {\n    if (this.state.expanded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 9\n        }\n      }, this.props.data.description);\n    }\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["C:/Users/thepa/Jiun-Ting.github.io/Course Enrollment/src/Course.js"],"names":["React","Card","Button","Modal","Accordion","Course","Component","constructor","props","getPriority","data","output","dict","requisites","length","Requisites","must","group","option","temp","complete","find","x","console","log","push","course","allCourses","number","getRequisites","pop","join","replaceAll","state","expanded","showModal","show","cart","qualified","handleClose","bind","setState","completed","subReq","i","getQualified","removeDups","names","unique","forEach","Object","keys","render","width","marginTop","marginBottom","maxWidth","name","getExpansionButton","getCredits","getDescription","openModal","closeModal","getSections","color","getCourseButton","buttonVariant","buttonOnClick","addCourse","buttonText","courseKey","cartCourses","removeCourse","sections","Header","height","display","alignItems","getSectionButton","JSON","stringify","time","getSubsections","section","e","addSection","removeSection","position","right","addCartCourse","removeCartCourse","stopPropagation","addSubsection","subsection","removeSubsection","sectionKey","sectionValue","subsections","getSubsectionButton","indexOf","setExpanded","value","fontSize","padding","top","description","credits"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      showModal: false,\r\n      show: false,\r\n      cart: false,\r\n      qualified: true\r\n    }\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n  \r\n\thandleClose(){\r\n\t\tthis.setState({\r\n\t\t\tshow:false\r\n\t\t});\r\n\t}\r\n \r\n  getRequisites(data) {\r\n    let dict = data.requisites;\r\n    let completed = this.props.complete;\r\n\r\n    for (let must in dict) {\r\n      let  subReq= false;\r\n      for (let option in dict[must]) {\r\n        for(let i =0; i < completed.length; i++) {\r\n          if (dict[must][option]===completed[i]){\r\n            subReq = true\r\n          }\r\n        }\r\n      }\r\n      if (subReq === false){\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n\r\n  getQualified() {\r\n    if (!this.getRequisites(this.props.data) && this.state.cart===true){\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n\r\n  \r\n  getPriority = (data, output) => {\r\n\r\n    let dict = data.requisites;\r\n    if (dict.length === 0){\r\n      return output\r\n    }\r\n    let Requisites = [];\r\n    for (let must in dict) {\r\n      let group = [];\r\n      for (let option in dict[must]) {\r\n        let temp = this.props.complete.find((x) => {return x === dict[must][option]})\r\n        console.log(this.props.complete)\r\n        if (!temp){\r\n          group.push(dict[must][option])\r\n        }\r\n        let course = this.props.allCourses.find((x) => {return x.number === dict[must][option]})\r\n        if (!this.getRequisites(course)){\r\n          output.push(this.getPriority(course, output)[0])\r\n \r\n        }\r\n        group.push(\" OR \");\r\n      }\r\n      group.pop();\r\n      Requisites.push(group.join().replaceAll(\",\",''))\r\n    }\r\n    \r\n    output.push(\"Take: \"+ Requisites+\" to satisfiy: \"+data.number+ \"\\n\")\r\n    return output\r\n  }\r\n\r\n  removeDups(names) {\r\n    let unique = {};\r\n    names.forEach(function(i) {\r\n      if(!unique[i]) {\r\n        unique[i] = true;\r\n      }\r\n    });\r\n    return Object.keys(unique);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <div style={{maxWidth: 250}}>\r\n              {this.props.data.name} \r\n            </div>\r\n            {this.getExpansionButton()}\r\n          </Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}\r\n          \r\n          </Card.Subtitle>\r\n          {this.getDescription()}\r\n          <Button variant='dark' onClick={() => this.openModal()}>View sections</Button>\r\n        </Card.Body>\r\n        <Modal show={this.state.showModal} onHide={() => this.closeModal()} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.props.data.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n            {this.getSections()}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n       \r\n          {this.getQualified() ? ' ': \r\n            <div  style={{ color: 'red' }}>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n\t\t\t        <Card>\r\n\t\t\t<Card.Header>\r\n\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n\t\t\t\t<strong > <div  style={{ color: 'red' }}>Not Qualified</div></strong>\r\n\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t<div className=\"float-right\"> \r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</Card.Header>\r\n\t\t\t<Accordion.Collapse eventKey=\"1\">\r\n\t\t\t\t<Card.Body>\r\n        You can take courses by the follwing steps: \r\n            {this.removeDups(this.getPriority(this.props.data, []))} \r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Accordion.Collapse>\r\n\t\t\t</Card>\r\n\t\t        </Accordion>\r\n           \r\n\r\n           </div> \r\n          \r\n          }\r\n\r\n            {this.getCourseButton()}\r\n            <Button variant=\"secondary\" onClick={() => this.closeModal()}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  getCourseButton() {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = () => this.addCourse();\r\n    let buttonText = 'Add Course';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      buttonVariant = 'outline-dark';\r\n      buttonOnClick = () => this.removeCourse();\r\n      buttonText = 'Remove Course'\r\n    }\r\n\r\n    return (\r\n      <Button variant={buttonVariant} onClick={buttonOnClick}>\r\n        {buttonText}\r\n      </Button>\r\n\r\n    )\r\n  }\r\n\r\n  getSections() {\r\n    let sections = [];\r\n\r\n\r\n    for (let i =0; i < this.props.data.sections.length; i++){\r\n      sections.push (\r\n          <Card key={i}>\r\n            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n              {\"Section \" + i}\r\n              {this.getSectionButton(i)}\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={i}>\r\n              <Card.Body>\r\n                {JSON.stringify(this.props.data.sections[i].time)}\r\n                {this.getSubsections(i, this.props.data.sections[i])}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {sections}\r\n      </Accordion>\r\n    )\r\n  }\r\n  getSectionButton(section) {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = (e) => this.addSection(e, section);\r\n    let buttonText = 'Add Section';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        buttonVariant = 'outline-dark';\r\n        buttonOnClick = (e) => this.removeSection(e, section);\r\n        buttonText = 'Remove Section';\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n\r\n  addCourse() {\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        \r\n      }\r\n    );\r\n    this.setState({cart: true});\r\n  }\r\n\r\n  removeCourse() {\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n      }\r\n    );\r\n    this.setState({cart: false});\r\n  }\r\n\r\n  addSection(e, section) {\r\n    e.stopPropagation();\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n    this.setState({cart: true});\r\n  }\r\n\r\n  removeSection(e, section) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n    this.setState({cart: false});\r\n  }\r\n\r\n  addSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n    this.setState({cart: true});\r\n  }\r\n\r\n  removeSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n    this.setState({cart: false});\r\n  }\r\n\r\n  getSubsections(sectionKey, sectionValue) {\r\n    let subsections = [];\r\n\r\n    for (let i =0; i < sectionValue.subsections.length; i++){  \r\n    subsections.push (\r\n        <Card key={i}>\r\n          <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n            {i}\r\n            {this.getSubsectionButton(sectionKey, i)}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey={i}>\r\n            <Card.Body>\r\n              {JSON.stringify(sectionValue.subsections[i].time)}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {subsections}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSubsectionButton(section, subsection) {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = (e) => this.addSubsection(e, section, subsection);\r\n    let buttonText = 'Add Subsection';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        if(this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\r\n          buttonVariant = 'outline-dark';\r\n          buttonOnClick = (e) => this.removeSubsection(e, section, subsection);\r\n          buttonText = 'Remove Subsection';\r\n        }\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({showModal: true});\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({showModal: false});\r\n  }\r\n\r\n  setExpanded(value) {\r\n    this.setState({expanded: value});\r\n  }\r\n\r\n  getExpansionButton() {\r\n    let buttonText = '▼';\r\n    let buttonOnClick = () => this.setExpanded(true);\r\n\r\n    if(this.state.expanded) {\r\n      buttonText = '▲';\r\n      buttonOnClick = () => this.setExpanded(false)\r\n    }\r\n\r\n    return (\r\n      <Button variant='outline-dark' style={{width: 25, height: 25, fontSize: 12, padding: 0, position: 'absolute', right: 20, top: 20}} onClick={buttonOnClick}>{buttonText}</Button>\r\n    )\r\n  }\r\n\r\n  getDescription() {\r\n    if(this.state.expanded) {\r\n      return (\r\n        <div>\r\n          {this.props.data.description}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getCredits() {\r\n    if(this.props.data.credits === 1)\r\n      return '1 credit';\r\n    else\r\n      return this.props.data.credits + ' credits';\r\n  }\r\n}\r\n\r\nexport default Course;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}