{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thepa\\\\Jiun-Ting.github.io\\\\Course Enrollment\\\\src\\\\Completed.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass Completed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showModal: false,\n      rating: '',\n      score: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let interests = this.props.data.keywords;\n\n    if (this.element.value >= 4) {\n      this.props.addPreference(interests);\n    } else {\n      this.props.removePref(interests);\n    }\n\n    this.setState({\n      rating: this.element.value\n    });\n\n    if (this.element.value >= 0 && this.element.value <= 5) {\n      this.closeModal();\n    }\n  }\n\n  handleRatingKeyDown(e) {\n    if (['0', '1', '2', '3', '4', '5', 'Backspace', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Tab'].indexOf(e.key) === -1) e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '33%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, this.props.data.name), this.getExpansionButton()), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, this.props.data.number, \" - \", this.getCredits(), \"    Rating: \", this.state.rating), this.getDescription(), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Rate\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: () => this.closeModal(),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Rate \", this.props.data.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: el => this.element = el,\n      id: \"inputRating\",\n      onKeyDown: e => this.handleRatingKeyDown(e),\n      maxLength: \"1\",\n      placeholder: \"Your rating\",\n      className: \"form-control\",\n      name: \"quantity\",\n      min: \"0\",\n      max: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"ratingHelp\",\n      class: \"text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Enter a integer in [0,5].\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Submit\"))));\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  setExpanded(value) {\n    this.setState({\n      expanded: value\n    });\n  }\n\n  getExpansionButton() {\n    let buttonText = '▼';\n\n    let buttonOnClick = () => this.setExpanded(true);\n\n    if (this.state.expanded) {\n      buttonText = '▲';\n\n      buttonOnClick = () => this.setExpanded(false);\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      style: {\n        width: 25,\n        height: 25,\n        fontSize: 12,\n        padding: 0,\n        position: 'absolute',\n        right: 20,\n        top: 20\n      },\n      onClick: buttonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, buttonText);\n  }\n\n  getDescription() {\n    if (this.state.expanded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, this.props.data.description);\n    }\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n}\n\nexport default Completed;","map":{"version":3,"sources":["C:/Users/thepa/Jiun-Ting.github.io/Course Enrollment/src/Completed.js"],"names":["React","Card","Button","Modal","Completed","Component","constructor","props","state","expanded","showModal","rating","score","handleSubmit","bind","closeModal","setState","event","preventDefault","interests","data","keywords","element","value","addPreference","removePref","handleRatingKeyDown","e","indexOf","key","render","width","marginTop","marginBottom","maxWidth","name","getExpansionButton","number","getCredits","getDescription","openModal","el","setExpanded","buttonText","buttonOnClick","height","fontSize","padding","position","right","top","description","credits"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\n\r\nclass Completed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      showModal: false,\r\n      rating : '',\r\n      score: ''\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n  closeModal() {\r\n    this.setState({showModal: false});\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    let interests = this.props.data.keywords\r\n    if (this.element.value >=4){\r\n        this.props.addPreference(interests)\r\n    }else{\r\n        this.props.removePref(interests)\r\n    }\r\n\r\n    this.setState({ rating: this.element.value });\r\n    if (this.element.value >= 0 && this.element.value <= 5){\r\n    this.closeModal();\r\n    }\r\n  }\r\n  handleRatingKeyDown(e) {\r\n    if(['0','1','2','3','4','5','Backspace','ArrowLeft','ArrowRight','ArrowUp','ArrowDown','Tab'].indexOf(e.key) === -1)\r\n      e.preventDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <div style={{maxWidth: 250}}>\r\n              {this.props.data.name}\r\n            </div>\r\n            {this.getExpansionButton()}\r\n          </Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}    Rating: {this.state.rating}</Card.Subtitle>\r\n          {this.getDescription()}\r\n          <Button variant='dark' onClick={() => this.openModal()}>Rate</Button>\r\n          \r\n        </Card.Body>\r\n     \r\n\r\n        <Modal show={this.state.showModal} onHide={() => this.closeModal()} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Rate {this.props.data.name}</Modal.Title>\r\n          </Modal.Header>\r\n        <Modal.Body>\r\n  \r\n\r\n        <form className=\"form-inline\" onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group check\">\r\n\r\n                <input type=\"text\"  ref={el => this.element = el} id=\"inputRating\"  \r\n                onKeyDown={(e) => this.handleRatingKeyDown(e)}  maxLength = \"1\"\r\n                placeholder=\"Your rating\"\r\n                className=\"form-control\" \r\n                name=\"quantity\" min=\"0\" max=\"5\"/>\r\n\r\n                <small id=\"ratingHelp\" class=\"text-grey\">\r\n                Enter a integer in [0,5]. \r\n                </small>      \r\n            </div>\r\n            \r\n        </form>\r\n        \r\n        <button type=\"submit\" onClick={this.handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n        </Modal.Body>        \r\n\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n\r\n \r\n\r\n  openModal() {\r\n    this.setState({showModal: true});\r\n  }\r\n\r\n \r\n\r\n  setExpanded(value) {\r\n    this.setState({expanded: value});\r\n  }\r\n\r\n  getExpansionButton() {\r\n    let buttonText = '▼';\r\n    let buttonOnClick = () => this.setExpanded(true);\r\n\r\n    if(this.state.expanded) {\r\n      buttonText = '▲';\r\n      buttonOnClick = () => this.setExpanded(false)\r\n    }\r\n\r\n    return (\r\n      <Button variant='outline-dark' style={{width: 25, height: 25, fontSize: 12, padding: 0, position: 'absolute', right: 20, top: 20}} onClick={buttonOnClick}>{buttonText}</Button>\r\n    )\r\n  }\r\n\r\n  getDescription() {\r\n    if(this.state.expanded) {\r\n      return (\r\n        <div>\r\n          {this.props.data.description}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getCredits() {\r\n    if(this.props.data.credits === 1)\r\n      return '1 credit';\r\n    else\r\n      return this.props.data.credits + ' credits';\r\n  }\r\n}\r\n\r\nexport default Completed;\r\n"]},"metadata":{},"sourceType":"module"}